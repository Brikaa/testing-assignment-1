Prime paths (not test paths)
1 3 5 6 16 (infeasible)
1 3 5 6 7 8 9 10 11 13 14 (infeasible)
1 3 5 6 7 8 9 10 11 13 15 (infeasible)
1 3 5 6 7 8 9 10 12
1 3 5 6 7 8 9 13 14 (infeasible)
1 3 5 6 7 8 9 13 15 (infeasible)

6 7 8 9 10 11 13 15 6 (infeasible)
6 7 8 9 13 15 6 (infeasible)

7 15 6 16 (terminal)
7 8 9 10 11 13 15 6 16 (infeasible)
7 8 9 10 11 13 15 6 7 (infeasible)
7 8 9 13 15 6 16 (infeasible)
7 8 9 13 15 6 7 (infeasible)

8 9 10 11 13 15 6 7 8 (infeasible)
8 9 13 15 6 7 8 (infeasible)

9 10 11 13 15 6 7 8 9 (infeasible)
9 13 15 6 7 8 9 (infeasible)

10 11 13 15 6 7 8 9 10 (infeasible)
10 12 9 13 14 (terminal)
10 12 9 13 15 6 16 (infeasible)
10 12 9 13 15 6 7 8 (infeasible)

11 13 15 6 7 8 9 10 11 (infeasible)
11 13 15 6 7 8 9 10 12 (infeasible)

12 9 10 11 13 14 (infeasible)
12 9 10 11 13 15 6 16 (terminal)
12 9 10 11 13 15 6 7 8 (infeasible)

13 15 6 7 8 9 10 11 13 (infeasible)
13 15 6 7 8 9 13 (infeasible)

15 6 7 15
15 6 7 8 9 10 11 13 14 (infeasible)
15 6 7 8 9 10 11 13 15 (infeasible)
15 6 7 8 9 13 14 (infeasible)
15 6 7 8 9 13 15 (infeasible)

Test paths for prime path coverage
Path: 1 2
Test case: findTheFirstPrimeNumber(3, 2)

Path: 1 3 4
Test case: findTheFirstPrimeNumber(-1, 2)

Path: 1 3 5 6 7 15 6 7 8 9 10 12 9 10 12 9 10 12 9 10 11 13 15 6 16
- First number even
- Second number % 5 = 0
