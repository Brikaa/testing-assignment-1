Prime paths (not test paths)
1 2 (terminal)
1 3 4 (terminal)
1 3 5 6 16 (infeasible)
1 3 5 6 7 15
1 3 5 6 7 8 9 10 11 13 14 (infeasible)
1 3 5 6 7 8 9 10 11 13 15 (infeasible)
1 3 5 6 7 8 9 10 12
1 3 5 6 7 8 9 13 14 (infeasible)
1 3 5 6 7 8 9 13 15 (infeasible)

6 7 15 6
6 7 8 9 10 11 13 15 6 (infeasible)
6 7 8 9 13 15 6 (infeasible)

7 15 6 16 (terminal)
7 15 6 7
7 8 9 10 11 13 15 6 16 (infeasible)
7 8 9 10 11 13 15 6 7 (infeasible)
7 8 9 13 15 6 16 (infeasible)
7 8 9 13 15 6 7 (infeasible)

8 9 10 11 13 15 6 7 8 (infeasible)
8 9 13 15 6 7 8 (infeasible)

9 10 11 13 15 6 7 8 9 (infeasible)
9 10 12 9
9 13 15 6 7 8 9 (infeasible)

10 11 13 15 6 7 8 9 10 (infeasible)
10 12 9 10
10 12 9 13 14 (terminal)
10 12 9 13 15 6 16 (infeasible)
10 12 9 13 15 6 7 8 (infeasible)

11 13 15 6 7 8 9 10 11 (infeasible)
11 13 15 6 7 8 9 10 12 (infeasible)

12 9 10 11 13 14 (infeasible)
12 9 10 11 13 15 6 16 (terminal)
12 9 10 11 13 15 6 7 8 (infeasible)
12 9 10 12

13 15 6 7 8 9 10 11 13 (infeasible)
13 15 6 7 8 9 13 (infeasible)

15 6 7 15
15 6 7 8 9 10 11 13 14 (infeasible)
15 6 7 8 9 10 11 13 15 (infeasible)
15 6 7 8 9 13 14 (infeasible)
15 6 7 8 9 13 15 (infeasible)


Test paths for prime path coverage
(All feasible prime paths have been covered with feasible test paths
hence the number and the length of the paths may not be optimal):
Path: 1 2
Test case: findTheFirstPrimeNumber(3, 2)
Expected output: -1

Path: 1 3 4
Test case: findTheFirstPrimeNumber(-1, 2)
Expected output: -1

Path: 1 3 5 6 7 15 6 7 8 9 10 12 9 10 12 9 10 12 9 10 11 13 15 6 16
Test case: findTheFirstPrimeNumber(4, 5)
Expected output: -1

Path: 1 3 5 6 7 8 9 10 12 9 10 12 9 13 14
Test case: findTheFirstPrimeNumber(3, 4)
Expected output: 3

Path: 1 3 5 6 7 8 9 10 12 9 13 15 6 7 15 6 16
Test case: findTheFirstPrimeNumber(9, 10)
Expected output: -1

Path: 1 3 5 6 16
Test case: infeasible

Path: 1 3 5 6 7 8 9 10 11 13 14
Test case: infeasible

Path: 1 3 5 6 7 8 9 13 14
Test case: infeasible

Path: 1 3 5 6 7 8 9 10 11 13 15 6 7 8 9 13 15 6 7 8 9 10 11 13 15 6 7 8 9 10 11 13 15 6 7 8 9 10 11 13 15 6 7 8 9 10 12 9 10 11 13 15 6 7 8 9 10 12 9 13 15 6 7 8 9 13 15 6 7 8 9 10 11 13 14
Test case: infeasible

Path: 1 3 5 6 7 8 9 13 15 6 7 8 9 10 11 13 15 6 16
Test case: infeasible

Path: 1 3 5 6 7 8 9 13 15 6 16
Test case: infeasible

Path: 1 3 5 6 7 8 9 10 12 9 13 15 6 16
Test case: infeasible

Path: 1 3 5 6 7 8 9 10 12 9 10 11 13 14
Test case: infeasible

Path: 1 3 5 6 7 8 9 13 15 6 7 8 9 13 14
Test case: infeasible
